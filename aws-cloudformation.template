{
    "Metadata" : {
        "Comment" : [
            "AWS CloudFormation template to create a collaborate instance",
            "",
            "Getting a list of allowed instance types programatically is an open cloudformation issue",
            "https://github.com/aws-cloudformation/cloudformation-coverage-roadmap/issues/425",
            "",
            "BigBlueButton requires a minimum of 4 CPUs (or it won't install), so m5.large (for example) won't work",
            "",
            "We use AWS::LanguageExtensions to get Fn::ToJsonString",
	    "",
	    "Currently allows the instance to stop all instances on the account (!); need to fix this"
        ]
    },
    "Transform": "AWS::LanguageExtensions",
    "Parameters": {
        "KeyName": {
            "Description": "Name of an existing EC2 key pair to enable SSH access to the instance.",
            "Type": "AWS::EC2::KeyPair::KeyName"
        },
        "AMIId": {
            "Description": "Name of a Parameter Store parameter that stores the ID of the Amazon Machine Image (AMI).",
            "Type": "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>",
            "Default": "/aws/service/canonical/ubuntu/server/focal/stable/current/amd64/hvm/ebs-gp2/ami-id"
        },
        "InstanceType": {
            "Type" : "String",
            "Default" : "m5.xlarge",
            "AllowedValues" : ["m5.xlarge", "m5.2xlarge", "m5.4xlarge", "m5.8xlarge"]
        }
    },
    "Resources": {
        "MinimalLambdaRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Principal": {
                          "Service": "lambda.amazonaws.com"
                        },
                        "Action": "sts:AssumeRole"
                      }
                    ]
                },
                "ManagedPolicyArns" : [ "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole" ]
            }
        },
	"GenerateKeyPairLambdaFunction" : {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "PackageType": "Zip",
                "Runtime": "python3.9",
		"Role": {"Fn::GetAtt": ["MinimalLambdaRole", "Arn"]},
                "Timeout": 60,
                "Code": {
                    "S3Bucket": "collaborate-lambda-function",
                    "S3Key": "deployment-package.zip"
                },
		"Handler" : "lambda_function.generate_key_pair"
	    }
	},
	"KeyPair" : {
	    "Type" : "AWS::CloudFormation::CustomResource",
	    "Properties": {
		"ServiceToken": { "Fn::GetAtt" : ["GenerateKeyPairLambdaFunction", "Arn"] }
	    }
	},
        "InstanceSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Enable SSH access via port 22 and HTTP/HTTPS access via ports 80 and 443",
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": 22,
                        "ToPort": 22,
                        "CidrIp": "0.0.0.0/0"
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": 80,
                        "ToPort": 80,
                        "CidrIp": "0.0.0.0/0"
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": 443,
                        "ToPort": 443,
                        "CidrIp": "0.0.0.0/0"
                    }
                ]
            }
        },
        "Ec2InstanceRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Principal": {
                          "Service": "ec2.amazonaws.com"
                        },
                        "Action": "sts:AssumeRole"
                      }
                    ]
                },
                "Policies" : [
		    {
			"PolicyName" : { "Fn::Join" : [ "-", [ { "Ref" : "AWS::StackName" }, "autostop" ] ] },
			"PolicyDocument" : {
			    "Version": "2012-10-17",
			    "Statement": [
				{
				    "Effect": "Allow",
				    "Action": [
					"ec2:StopInstances"
				    ],
				    "Resource": "*"
				}
			    ]
			}
		    }
		]
	    }
	},
	"Ec2InstanceProfile": {
	    "Type": "AWS::IAM::InstanceProfile",
            "Properties": {
		"Roles" : [ { "Ref": "Ec2InstanceRole" } ]
	    }
	},
        "Ec2Instance": {
            "Type": "AWS::EC2::Instance",
            "Properties": {
                "KeyName": { "Ref": "KeyName" },
                "ImageId": { "Ref": "AMIId" },
                "InstanceType" : { "Ref": "InstanceType" },
                "SecurityGroups": [ { "Ref": "InstanceSecurityGroup" } ],
                "BlockDeviceMappings": [
                    {
                      "DeviceName": "/dev/sda1",
                      "Ebs": {
                        "VolumeType": "io1",
                        "Iops": "300",
                        "DeleteOnTermination": "false",
                        "VolumeSize": "32",
                        "Encrypted": true
                      }
                    }
                ],
                "HibernationOptions" : { "Configured" : true },
		"IamInstanceProfile" : { "Ref" : "Ec2InstanceProfile" },
		"Tags" : [ { "Key": "Name", "Value": { "Ref" : "AWS::StackName" } } ],
		"PropagateTagsToVolumeOnCreation" : true,
                "UserData" : { "Fn::Base64" : { "Fn::Join" : [ "\n", [
                    "#cloud-config",
                    "apt:",
                    "  sources:",
                    "    freesoft:",
                    "      source: \"deb http://www.freesoft.org/focal-270 bigbluebutton-focal main\"",
                    "      key: |",
                    "          -----BEGIN PGP PUBLIC KEY BLOCK-----",
                    "",
                    "          mQGNBF/NiYMBDAC9pM6L6qHbB08GfHCwveRKV43YUIjVE2k6X2it1FJskket2Bgd",
                    "          YmdgWuFFNjuJQM43OYigE5kM2AT8ENlkqteaTh63ahkYhBEOw25FFF9to/D8Aa6W",
                    "          O4vooQLxXCFDOx3RMsNdfzp4pMUCQAWqu9Qy53DdlY48aEa34FkIPVM+JSsh5r0X",
                    "          wBcRD6izHzsQbBiRMguhaI1IWh+6Yq+f+Pzh72UHERd9u6e2kPpcvYQTF2JVzI1V",
                    "          Wa9mCNU0YhHyhmQ21QW6/kWAia03WLmXlMpF5D7VfoFCPUXpCom8G9c77Ru9ny/W",
                    "          E/6TTSRKmBl3nK/EZUc9MAQ4Ao+UtqmuoEgWWmkLPCvB81d3K+Vwla/s7KPL7fYw",
                    "          V8DF5nGV4/vJhrXrLtqMvwPlDpO0nXmXCnrav/vqNpxZlF1W1Yf4qVgZDTa0wve1",
                    "          07LJp/3eUIv6Mr4V46JicL0ByPtNHch89ebl/yFNmVs4rcsYODDmaTJmp/50ZAqX",
                    "          J9ooohlaw1LCqFkAEQEAAbQjQnJlbnQgQmFjY2FsYSA8Y29zaW5lQGZyZWVzb2Z0",
                    "          Lm9yZz6JAc4EEwEKADgCGwMFCwkIBwIGFQoJCAsCBBYCAwECHgECF4AWIQSy6XhU",
                    "          osVXd2hD6wYmPFejYVyZGAUCZjF7PwAKCRAmPFejYVyZGOXRDACxj+8RmG02N4NJ",
                    "          JM5wMhk19KrBfrsKr+GbVNEXEzGlAmFlJGVvjvLu/7GGif5Nzu2y3IZaEHrg5zxw",
                    "          6+ZlvaafU+IaThVl8HIUvSPC0/FcOrroDnI8Blut/GsobLjkwB5/LTFGVPerronA",
                    "          ensiWsbROaOwLZscou2CjgPHU9c59WtFogvBKcHn6kKSY61YedduE6IUKDUkDGS3",
                    "          5xN7UNLUKyd2our958vAh+xsB+V+Hk0GjX2J2QTJvYEW8jc58G5xLCqdLlVA+cMt",
                    "          2nDlxUBzuVRI/g8PfSWC0afIIHYHd4v0/OJx8+qpWM41FfzhDMUyq56eSijeYoLB",
                    "          Qa7/mpNlAwIKli+alkTq87SDVTDE7LyBMmyTvA3wYRK0K0kgQ0G0GS4h0GypOz2f",
                    "          yufgF4LL1s48mkUSIgbp1fThoakw9y1/qF0xGEOMHFh3m2bycpCbsVv53DePOkYH",
                    "          uDhCq8K/qEvA3dSeMIxWvfTKLoFf2Rs76ZccWWWdRoDjU+Rq7Ua5AY0EX82JgwEM",
                    "          AKAbb9ySW5AYJoFUhVy5BmdD8ks2uSdAOLgkqVzQGC1MdxhWlOrwscLuO5Oogkv3",
                    "          qbfHJwTid5GWxh9OxeZUkVjqbl2AmJ3GE8Y242KpuN8srUcc/ZR4JpBLizR929MW",
                    "          z0D19inSPSuNMX9N0Ab6x+veT2Li/F3zv4VTxHWkC//ohvaFtAuf3f0fK/yC9eEa",
                    "          +x7WimPoNERGXZpVLH6NScCiSHN6J3M/K/toOp4Cdo+11sy6yAM4yFbAJjUMiClY",
                    "          sJoP4HQ/QAJMCXOmzF4BTjW6Zqrl8Xt9Yu9boQRdwZliLBWMXKS5uvYUHNGl8eky",
                    "          yVGJcteHLd3Y2tEsZyGuXzx4uzQzTmOIVuUyUKtcJbDJ9aAko9cdyMAZDWyK8s6g",
                    "          WaK/A6lMCyvHoTrO348guPKMJF6atMh6fp/nL3hrEH1qQ+V+6N7JnGzLHE4T8uLR",
                    "          XliFrOxasojsPVBrvSp8iUWUVT5pQ50hVZjT5Ny7xiF2V/tLZpb7NuWqVfPMwDsF",
                    "          ewARAQABiQG2BBgBCgAgAhsMFiEEsul4VKLFV3doQ+sGJjxXo2FcmRgFAmYxezUA",
                    "          CgkQJjxXo2FcmRhneQv/T75ZsBOxMjsdZzzG7PVAXu0Olt9vUapvaR310Z2tNLhT",
                    "          NwwmQvgPCXaUdloX+16dirIaoRqz0czh2Lh/y/+4XesIeuswwlmBMRgoQgfuyOdi",
                    "          qOYGhc6O219bXNu8yKxQaNLdWIoJmxlJeL+qMWdlA62/Q8tIe2tEzuCCHkcUZRFo",
                    "          dvhS4W/XclJFEyjpH6GbrIU5DqgyZ9ZiHYariLhUvwu2fsYIyOK5oMZWAnsKqDE1",
                    "          8MzPRNvUUCj2HDVCWiVH3Rcs44X5BIul0a2vZu0dB7kCtgplFtfne/cwRU2EHd3P",
                    "          zxqosEQNa5Oe8GDSULoqRB9QIlq1L5+/pT4gPofdpsH76te1Lpu8aDseRTa78dBD",
                    "          WKtGWZ7tAaNok/vliOe6uNY9QCtEV7K5Vc1vUWxI0M47wZNe+wgZhfeWmXEo8IVg",
                    "          v0b6NEkrZVcZ6Imp+F/4V4kGHnt+fTmB/ehijDTS0QBk0V7L9sMcD4cN7A55JVko",
                    "          xSaf+J344fYU8toyWlAY",
                    "          =ESw6",
                    "          -----END PGP PUBLIC KEY BLOCK-----",
                    "packages:",
                    "  - nsupdate-aws",
                    "  - ddclient",
                    "  - awscli",
		    "  - bbb-vnc-collaborate",
                    "  - freesoft-gnome-desktop",
                    "fqdn: genius.freesoft.org",
                    "write_files:",
                    "  - path: /var/lib/cloud/scripts/per-once/configure-ddclient",
                    "    content: |",
                    "      #!/bin/sh",
                    "      cat > /etc/default/ddclient <<EOF",
                    "      export AWS_ACCESS_KEY_ID=AKIAY662P6OVTVCJ73P2",
                    "      export AWS_SECRET_ACCESS_KEY=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",
                    "      run_daemon=true",
                    "      daemon_interval=3",
                    "      EOF",
                    "      chmod 0400 /etc/default/ddclient",
                    "      systemctl enable ddclient",
                    "      systemctl stop ddclient",
                    "      systemctl start ddclient",
                    "      wget -qO- https://raw.githubusercontent.com/bigbluebutton/bbb-install/v2.7.x-release/bbb-install.sh | bash -s -- -w -v focal-270 -r www.freesoft.org -s genius.freesoft.org -e cosine@freesoft.org",
                    "      # this has to be done after the BigBlueButton install, or the bigbluebutton group won't exist yet",
		    "      apt install bbb-auth-jwt",
		    "      # do this last, because it will cause the instance to hibernate if nobody logs in",
                    "      apt install bbb-aws-hibernate",
                    "    owner: 'root:root'",
                    "    permissions: '0755'",
                    "  - path: /etc/ddclient.conf",
                    "    content: |",
                    "      use=cmd",
                    "      cmd=\"/usr/bin/wget -qO- http://169.254.169.254/latest/meta-data/public-ipv4\"",
                    "      protocol=nsupdate",
                    "      login=/usr/share/nsupdate-aws/nsupdate-aws",
                    "      password=Z08462181NK07JJAPHM5M",
                    "      ttl=10",
                    "      genius.freesoft.org",
                    "    owner: 'root:root'",
                    "    permissions: '0400'",
                    "  - path: /etc/bigbluebutton/authorized_keys",
                    "    content: |",
                    { "Fn::GetAtt" : [ "KeyPair", "PublicKeyYAML" ] },
                    "    owner: 'root:root'",
                    "    permissions: '0644'",
                    "    defer: true",
                    "  - path: /etc/bigbluebutton/bbb-html5.yml",
                    "    content: |",
		    "       public:",
		    "         remoteDesktop:",
		    "           startLocked: false",
		    "           defaultUrl: wss://genius.freesoft.org/vnc",
                    "    owner: 'root:root'",
                    "    permissions: '0644'",
                    "    defer: true",
                    "  - path: /home/ubuntu/.ssh/id_rsa",
                    "    content: |",
                    { "Fn::GetAtt" : [ "KeyPair", "PrivateKeyYAML" ] },
                    "    owner: 'ubuntu:ubuntu'",
                    "    permissions: '0400'",
                    "    defer: true",
                    "  - path: /home/ubuntu/.ssh/id_rsa.pub",
                    "    content: |",
                    { "Fn::GetAtt" : [ "KeyPair", "PublicKeyYAML" ] },
                    "    owner: 'ubuntu:ubuntu'",
                    "    permissions: '0444'",
                    "    defer: true",
                    ""
                ] ] } }
            }
        },
        "AutostartRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Principal": {
                          "Service": "lambda.amazonaws.com"
                        },
                        "Action": "sts:AssumeRole"
                      }
                    ]
                },
                "ManagedPolicyArns" : [ "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole" ],
                "Policies" : [
                    {
			"PolicyName" : { "Fn::Join" : [ "-", [ { "Ref" : "AWS::StackName" }, "autostart" ] ] },
                        "PolicyDocument" : {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": ["ec2:DescribeInstances", "ec2:StartInstances"],
                                    "Resource": "*"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "LoginLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Role": {"Fn::GetAtt": ["AutostartRole", "Arn"]},
                "PackageType": "Zip",
                "Runtime": "python3.9",
                "Code": {
                    "S3Bucket": "collaborate-lambda-function",
                    "S3Key": "deployment-package.zip"
                },
                "Handler": "lambda_function.lambda_handler",
                "Timeout": 60,
                "Environment": {
                    "Variables": {
                        "CONFIG": {
                            "Fn::ToJsonString" : {
                                "collaborate": {
                                    "fqdn": "genius.freesoft.org",
                                    "instances": [ { "Fn::GetAtt" : ["Ec2Instance", "InstanceId" ] } ],
                                    "keys": [ { "Fn::GetAtt" : ["KeyPair", "PublicKey" ] } ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "LoginAPI": {
            "Type": "AWS::ApiGatewayV2::Api",
            "Properties": {
                "Name": "login",
                "ProtocolType": "HTTP",
                "Target": { "Fn::GetAtt": ["LoginLambdaFunction", "Arn"] },
                "RouteKey": "ANY /login"
            }
        },
	"LoginPermission": {
	    "Type": "AWS::Lambda::Permission",
	    "Properties": {
		"Action": "lambda:InvokeFunction",
		"FunctionName": { "Fn::GetAtt" : [ "LoginLambdaFunction", "Arn" ] },
		"Principal": "apigateway.amazonaws.com",
		"SourceArn": { "Fn::Join" : [ "", [
		    "arn:aws:execute-api:",
		    { "Ref" : "AWS::Region" },
		    ":",
		    { "Ref" : "AWS::AccountId" },
		    ":",
		    { "Fn::GetAtt" : [ "LoginAPI", "ApiId" ] },
		    "/*/*/login"
		] ] }
	    }
	}
    },
    "Outputs": {
	"LoginURL" : {
	    "Value" : { "Fn::Join" : [ "/login?", [ { "Fn::GetAtt": [ "LoginAPI", "ApiEndpoint" ] }, { "Fn::GetAtt" : [ "KeyPair", "UbuntuToken" ] } ] ] }
	}
    }
}
